/*
 * This file is generated by jOOQ.
*/
package c.b.s.common.message.infrastructure.jooq.tables;


import c.b.s.common.message.infrastructure.jooq.BoxinSaasTenant;
import c.b.s.common.message.infrastructure.jooq.Keys;
import c.b.s.common.message.infrastructure.jooq.tables.records.TbMessageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 智牛SaaS平台消息表, owner: guiqingqing, manager: zhengkeshuang
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbMessage extends TableImpl<TbMessageRecord> {

    private static final long serialVersionUID = -647095328;

    /**
     * The reference instance of <code>boxin_saas_tenant.tb_message</code>
     */
    public static final TbMessage TB_MESSAGE = new TbMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbMessageRecord> getRecordType() {
        return TbMessageRecord.class;
    }

    /**
     * The column <code>boxin_saas_tenant.tb_message.id</code>. 消息ID
     */
    public static final TableField<TbMessageRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), TB_MESSAGE, "消息ID");

    /**
     * The column <code>boxin_saas_tenant.tb_message.user_id</code>. 用户ID
     */
    public static final TableField<TbMessageRecord, ULong> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), TB_MESSAGE, "用户ID");

    /**
     * The column <code>boxin_saas_tenant.tb_message.application_id</code>. 应用ID
     */
    public static final TableField<TbMessageRecord, ULong> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), TB_MESSAGE, "应用ID");

    /**
     * The column <code>boxin_saas_tenant.tb_message.type</code>. 消息类型
     */
    public static final TableField<TbMessageRecord, UByte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), TB_MESSAGE, "消息类型");

    /**
     * The column <code>boxin_saas_tenant.tb_message.subject</code>. 消息标题
     */
    public static final TableField<TbMessageRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), TB_MESSAGE, "消息标题");

    /**
     * The column <code>boxin_saas_tenant.tb_message.content</code>. 消息内容
     */
    public static final TableField<TbMessageRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), TB_MESSAGE, "消息内容");

    /**
     * The column <code>boxin_saas_tenant.tb_message.file_name</code>. 文件名
     */
    public static final TableField<TbMessageRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), TB_MESSAGE, "文件名");

    /**
     * The column <code>boxin_saas_tenant.tb_message.status</code>. 消息状态 0:未读 1:已读
     */
    public static final TableField<TbMessageRecord, UByte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), TB_MESSAGE, "消息状态 0:未读 1:已读");

    /**
     * The column <code>boxin_saas_tenant.tb_message.readtime</code>. 已读时间
     */
    public static final TableField<TbMessageRecord, Timestamp> READTIME = createField("readtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), TB_MESSAGE, "已读时间");

    /**
     * The column <code>boxin_saas_tenant.tb_message.inserttime</code>. 创建时间
     */
    public static final TableField<TbMessageRecord, Timestamp> INSERTTIME = createField("inserttime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), TB_MESSAGE, "创建时间");

    /**
     * The column <code>boxin_saas_tenant.tb_message.updatetime</code>. 更新时间
     */
    public static final TableField<TbMessageRecord, Timestamp> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), TB_MESSAGE, "更新时间");

    /**
     * The column <code>boxin_saas_tenant.tb_message.isactive</code>. 逻辑删除
     */
    public static final TableField<TbMessageRecord, Byte> ISACTIVE = createField("isactive", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), TB_MESSAGE, "逻辑删除");

    /**
     * No further instances allowed
     */
    private TbMessage() {
        this(DSL.name("tb_message"), null);
    }

    private TbMessage(Name alias, Table<TbMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbMessage(Name alias, Table<TbMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "智牛SaaS平台消息表, owner: guiqingqing, manager: zhengkeshuang");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BoxinSaasTenant.BOXIN_SAAS_TENANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TbMessageRecord, ULong> getIdentity() {
        return Keys.IDENTITY_TB_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbMessageRecord> getPrimaryKey() {
        return Keys.KEY_TB_MESSAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<TbMessageRecord>>asList(Keys.KEY_TB_MESSAGE_PRIMARY);
    }
}
