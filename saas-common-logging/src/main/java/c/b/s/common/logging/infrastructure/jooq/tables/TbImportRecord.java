/*
 * This file is generated by jOOQ.
*/
package c.b.s.common.logging.infrastructure.jooq.tables;


import c.b.s.common.logging.infrastructure.jooq.BoxinSaasTenant;
import c.b.s.common.logging.infrastructure.jooq.Keys;
import c.b.s.common.logging.infrastructure.jooq.tables.records.TbImportRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * 催收作业系统导入记录表, owner: guiqingqing, manager: zhengkeshuang
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbImportRecord extends TableImpl<TbImportRecordRecord> {

    private static final long serialVersionUID = 1668000366;

    /**
     * The reference instance of <code>boxin_saas_tenant.tb_import_record</code>
     */
    public static final TbImportRecord TB_IMPORT_RECORD = new TbImportRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbImportRecordRecord> getRecordType() {
        return TbImportRecordRecord.class;
    }

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.id</code>. 主键ID
     */
    public static final TableField<TbImportRecordRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), TB_IMPORT_RECORD, "主键ID");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.file_name</code>. 文件名
     */
    public static final TableField<TbImportRecordRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), TB_IMPORT_RECORD, "文件名");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.import_type</code>. 导入类型 1:案件导入
     */
    public static final TableField<TbImportRecordRecord, UByte> IMPORT_TYPE = createField("import_type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), TB_IMPORT_RECORD, "导入类型 1:案件导入");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.original_file_url</code>. 原始文件地址
     */
    public static final TableField<TbImportRecordRecord, String> ORIGINAL_FILE_URL = createField("original_file_url", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), TB_IMPORT_RECORD, "原始文件地址");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.handled_file_url</code>. 处理后的文件地址
     */
    public static final TableField<TbImportRecordRecord, String> HANDLED_FILE_URL = createField("handled_file_url", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), TB_IMPORT_RECORD, "处理后的文件地址");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.status</code>. 处理状态 0:处理中 1:处理成功 2:处理失败
     */
    public static final TableField<TbImportRecordRecord, UByte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), TB_IMPORT_RECORD, "处理状态 0:处理中 1:处理成功 2:处理失败");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.total_count</code>. 总记录数
     */
    public static final TableField<TbImportRecordRecord, UInteger> TOTAL_COUNT = createField("total_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), TB_IMPORT_RECORD, "总记录数");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.success_count</code>. 成功记录数
     */
    public static final TableField<TbImportRecordRecord, UInteger> SUCCESS_COUNT = createField("success_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), TB_IMPORT_RECORD, "成功记录数");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.admin_id</code>. 操作人ID
     */
    public static final TableField<TbImportRecordRecord, ULong> ADMIN_ID = createField("admin_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), TB_IMPORT_RECORD, "操作人ID");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.admin_real_name</code>. 操作人姓名
     */
    public static final TableField<TbImportRecordRecord, String> ADMIN_REAL_NAME = createField("admin_real_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), TB_IMPORT_RECORD, "操作人姓名");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.inserttime</code>. 创建时间
     */
    public static final TableField<TbImportRecordRecord, Timestamp> INSERTTIME = createField("inserttime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), TB_IMPORT_RECORD, "创建时间");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.updatetime</code>. 更新时间
     */
    public static final TableField<TbImportRecordRecord, Timestamp> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), TB_IMPORT_RECORD, "更新时间");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.isactive</code>. 逻辑删除
     */
    public static final TableField<TbImportRecordRecord, Byte> ISACTIVE = createField("isactive", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), TB_IMPORT_RECORD, "逻辑删除");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.asset_id</code>. 资方ID
     */
    public static final TableField<TbImportRecordRecord, ULong> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, TB_IMPORT_RECORD, "资方ID");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.task_id</code>. 任务ID
     */
    public static final TableField<TbImportRecordRecord, String> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.VARCHAR(100), TB_IMPORT_RECORD, "任务ID");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.new_user_count</code>. 新户数
     */
    public static final TableField<TbImportRecordRecord, UInteger> NEW_USER_COUNT = createField("new_user_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, TB_IMPORT_RECORD, "新户数");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.old_user_count</code>. 合并老户数
     */
    public static final TableField<TbImportRecordRecord, UInteger> OLD_USER_COUNT = createField("old_user_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, TB_IMPORT_RECORD, "合并老户数");

    /**
     * The column <code>boxin_saas_tenant.tb_import_record.total_user_count</code>. 总户数
     */
    public static final TableField<TbImportRecordRecord, UInteger> TOTAL_USER_COUNT = createField("total_user_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, TB_IMPORT_RECORD, "总户数");

    /**
     * No further instances allowed
     */
    private TbImportRecord() {
        this(DSL.name("tb_import_record"), null);
    }

    private TbImportRecord(Name alias, Table<TbImportRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbImportRecord(Name alias, Table<TbImportRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "催收作业系统导入记录表, owner: guiqingqing, manager: zhengkeshuang");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BoxinSaasTenant.BOXIN_SAAS_TENANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TbImportRecordRecord, ULong> getIdentity() {
        return Keys.IDENTITY_TB_IMPORT_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbImportRecordRecord> getPrimaryKey() {
        return Keys.KEY_TB_IMPORT_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbImportRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<TbImportRecordRecord>>asList(Keys.KEY_TB_IMPORT_RECORD_PRIMARY);
    }
}
